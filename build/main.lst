ARM GAS  /tmp/ccGJRFNG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MPU_Config,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MPU_Config:
  25              	.LFB146:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccGJRFNG.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MPU_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c ****   MPU_Config();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccGJRFNG.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c ****     /* USER CODE END WHILE */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 104:Core/Src/main.c ****   }
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief System Clock Configuration
 110:Core/Src/main.c ****   * @retval None
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** void SystemClock_Config(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /** Supply configuration update enable
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccGJRFNG.s 			page 4


 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /* USER CODE END 4 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****  /* MPU Configuration */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** void MPU_Config(void)
 165:Core/Src/main.c **** {
  27              		.loc 1 165 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
 166:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
  39              		.loc 1 166 3 view .LVU1
  40              		.loc 1 166 26 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0094     		str	r4, [sp]
  43 0008 0194     		str	r4, [sp, #4]
  44 000a 0294     		str	r4, [sp, #8]
  45 000c 0394     		str	r4, [sp, #12]
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Disables the MPU */
 169:Core/Src/main.c ****   HAL_MPU_Disable();
  46              		.loc 1 169 3 is_stmt 1 view .LVU3
  47 000e FFF7FEFF 		bl	HAL_MPU_Disable
  48              	.LVL0:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  49              		.loc 1 173 3 view .LVU4
  50              		.loc 1 173 25 is_stmt 0 view .LVU5
  51 0012 0123     		movs	r3, #1
  52 0014 8DF80030 		strb	r3, [sp]
 174:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  53              		.loc 1 174 3 is_stmt 1 view .LVU6
  54              		.loc 1 174 25 is_stmt 0 view .LVU7
  55 0018 8DF80140 		strb	r4, [sp, #1]
ARM GAS  /tmp/ccGJRFNG.s 			page 5


 175:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
  56              		.loc 1 175 3 is_stmt 1 view .LVU8
  57              		.loc 1 175 30 is_stmt 0 view .LVU9
  58 001c 0194     		str	r4, [sp, #4]
 176:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
  59              		.loc 1 176 3 is_stmt 1 view .LVU10
  60              		.loc 1 176 23 is_stmt 0 view .LVU11
  61 001e 1F22     		movs	r2, #31
  62 0020 8DF80820 		strb	r2, [sp, #8]
 177:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
  63              		.loc 1 177 3 is_stmt 1 view .LVU12
  64              		.loc 1 177 35 is_stmt 0 view .LVU13
  65 0024 8722     		movs	r2, #135
  66 0026 8DF80920 		strb	r2, [sp, #9]
 178:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  67              		.loc 1 178 3 is_stmt 1 view .LVU14
  68              		.loc 1 178 31 is_stmt 0 view .LVU15
  69 002a 8DF80A40 		strb	r4, [sp, #10]
 179:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  70              		.loc 1 179 3 is_stmt 1 view .LVU16
  71              		.loc 1 179 35 is_stmt 0 view .LVU17
  72 002e 8DF80B40 		strb	r4, [sp, #11]
 180:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  73              		.loc 1 180 3 is_stmt 1 view .LVU18
  74              		.loc 1 180 30 is_stmt 0 view .LVU19
  75 0032 8DF80C30 		strb	r3, [sp, #12]
 181:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
  76              		.loc 1 181 3 is_stmt 1 view .LVU20
  77              		.loc 1 181 30 is_stmt 0 view .LVU21
  78 0036 8DF80D30 		strb	r3, [sp, #13]
 182:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  79              		.loc 1 182 3 is_stmt 1 view .LVU22
  80              		.loc 1 182 30 is_stmt 0 view .LVU23
  81 003a 8DF80E40 		strb	r4, [sp, #14]
 183:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
  82              		.loc 1 183 3 is_stmt 1 view .LVU24
  83              		.loc 1 183 31 is_stmt 0 view .LVU25
  84 003e 8DF80F40 		strb	r4, [sp, #15]
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
  85              		.loc 1 185 3 is_stmt 1 view .LVU26
  86 0042 6846     		mov	r0, sp
  87 0044 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
  88              	.LVL1:
 186:Core/Src/main.c ****   /* Enables the MPU */
 187:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
  89              		.loc 1 187 3 view .LVU27
  90 0048 0420     		movs	r0, #4
  91 004a FFF7FEFF 		bl	HAL_MPU_Enable
  92              	.LVL2:
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** }
  93              		.loc 1 189 1 is_stmt 0 view .LVU28
  94 004e 04B0     		add	sp, sp, #16
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		@ sp needed
ARM GAS  /tmp/ccGJRFNG.s 			page 6


  98 0050 10BD     		pop	{r4, pc}
  99              		.cfi_endproc
 100              	.LFE146:
 102              		.section	.text.Error_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	Error_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv5-d16
 110              	Error_Handler:
 111              	.LFB147:
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** void Error_Handler(void)
 196:Core/Src/main.c **** {
 112              		.loc 1 196 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 197:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 198:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 199:Core/Src/main.c ****   __disable_irq();
 118              		.loc 1 199 3 view .LVU30
 119              	.LBB4:
 120              	.LBI4:
 121              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/ccGJRFNG.s 			page 7


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/ccGJRFNG.s 			page 8


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
ARM GAS  /tmp/ccGJRFNG.s 			page 9


 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccGJRFNG.s 			page 10


 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 122              		.loc 2 207 27 view .LVU31
 123              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 124              		.loc 2 209 3 view .LVU32
 125              		.syntax unified
 126              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 127 0000 72B6     		cpsid i
 128              	@ 0 "" 2
 129              		.thumb
 130              		.syntax unified
 131              	.L4:
 132              	.LBE5:
 133              	.LBE4:
 200:Core/Src/main.c ****   while (1)
 134              		.loc 1 200 3 discriminator 1 view .LVU33
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****   }
 135              		.loc 1 202 3 discriminator 1 view .LVU34
 200:Core/Src/main.c ****   while (1)
 136              		.loc 1 200 9 discriminator 1 view .LVU35
 137 0002 FEE7     		b	.L4
 138              		.cfi_endproc
 139              	.LFE147:
 141              		.section	.text.SystemClock_Config,"ax",%progbits
 142              		.align	1
 143              		.global	SystemClock_Config
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-d16
 149              	SystemClock_Config:
 150              	.LFB145:
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151              		.loc 1 113 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 112
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 00B5     		push	{lr}
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 14, -4
 159 0002 9DB0     		sub	sp, sp, #116
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 120
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccGJRFNG.s 			page 11


 162              		.loc 1 114 3 view .LVU37
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163              		.loc 1 114 22 is_stmt 0 view .LVU38
 164 0004 4C22     		movs	r2, #76
 165 0006 0021     		movs	r1, #0
 166 0008 09A8     		add	r0, sp, #36
 167 000a FFF7FEFF 		bl	memset
 168              	.LVL3:
 115:Core/Src/main.c **** 
 169              		.loc 1 115 3 is_stmt 1 view .LVU39
 115:Core/Src/main.c **** 
 170              		.loc 1 115 22 is_stmt 0 view .LVU40
 171 000e 2022     		movs	r2, #32
 172 0010 0021     		movs	r1, #0
 173 0012 01A8     		add	r0, sp, #4
 174 0014 FFF7FEFF 		bl	memset
 175              	.LVL4:
 119:Core/Src/main.c **** 
 176              		.loc 1 119 3 is_stmt 1 view .LVU41
 177 0018 0220     		movs	r0, #2
 178 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 179              	.LVL5:
 123:Core/Src/main.c **** 
 180              		.loc 1 123 3 view .LVU42
 181              	.LBB6:
 123:Core/Src/main.c **** 
 182              		.loc 1 123 3 view .LVU43
 183 001e 0023     		movs	r3, #0
 184 0020 0093     		str	r3, [sp]
 123:Core/Src/main.c **** 
 185              		.loc 1 123 3 view .LVU44
 123:Core/Src/main.c **** 
 186              		.loc 1 123 3 view .LVU45
 187 0022 1E4B     		ldr	r3, .L12
 188 0024 DA6A     		ldr	r2, [r3, #44]
 189 0026 22F00102 		bic	r2, r2, #1
 190 002a DA62     		str	r2, [r3, #44]
 123:Core/Src/main.c **** 
 191              		.loc 1 123 3 view .LVU46
 192 002c DB6A     		ldr	r3, [r3, #44]
 193 002e 03F00103 		and	r3, r3, #1
 194 0032 0093     		str	r3, [sp]
 123:Core/Src/main.c **** 
 195              		.loc 1 123 3 view .LVU47
 196 0034 1A4A     		ldr	r2, .L12+4
 197 0036 9369     		ldr	r3, [r2, #24]
 198 0038 23F44043 		bic	r3, r3, #49152
 199 003c 43F48043 		orr	r3, r3, #16384
 200 0040 9361     		str	r3, [r2, #24]
 123:Core/Src/main.c **** 
 201              		.loc 1 123 3 view .LVU48
 202 0042 9369     		ldr	r3, [r2, #24]
 203 0044 03F44043 		and	r3, r3, #49152
 204 0048 0093     		str	r3, [sp]
 123:Core/Src/main.c **** 
 205              		.loc 1 123 3 view .LVU49
 206 004a 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccGJRFNG.s 			page 12


 207              	.LBE6:
 123:Core/Src/main.c **** 
 208              		.loc 1 123 3 view .LVU50
 125:Core/Src/main.c **** 
 209              		.loc 1 125 3 view .LVU51
 210              	.L6:
 125:Core/Src/main.c **** 
 211              		.loc 1 125 48 discriminator 1 view .LVU52
 125:Core/Src/main.c **** 
 212              		.loc 1 125 8 discriminator 1 view .LVU53
 125:Core/Src/main.c **** 
 213              		.loc 1 125 10 is_stmt 0 discriminator 1 view .LVU54
 214 004c 144B     		ldr	r3, .L12+4
 215 004e 9B69     		ldr	r3, [r3, #24]
 125:Core/Src/main.c **** 
 216              		.loc 1 125 8 discriminator 1 view .LVU55
 217 0050 13F4005F 		tst	r3, #8192
 218 0054 FAD0     		beq	.L6
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 219              		.loc 1 130 3 is_stmt 1 view .LVU56
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 220              		.loc 1 130 36 is_stmt 0 view .LVU57
 221 0056 0223     		movs	r3, #2
 222 0058 0993     		str	r3, [sp, #36]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 223              		.loc 1 131 3 is_stmt 1 view .LVU58
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 224              		.loc 1 131 30 is_stmt 0 view .LVU59
 225 005a 0123     		movs	r3, #1
 226 005c 0C93     		str	r3, [sp, #48]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 227              		.loc 1 132 3 is_stmt 1 view .LVU60
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 228              		.loc 1 132 41 is_stmt 0 view .LVU61
 229 005e 4023     		movs	r3, #64
 230 0060 0D93     		str	r3, [sp, #52]
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231              		.loc 1 133 3 is_stmt 1 view .LVU62
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 232              		.loc 1 133 34 is_stmt 0 view .LVU63
 233 0062 0023     		movs	r3, #0
 234 0064 1293     		str	r3, [sp, #72]
 134:Core/Src/main.c ****   {
 235              		.loc 1 134 3 is_stmt 1 view .LVU64
 134:Core/Src/main.c ****   {
 236              		.loc 1 134 7 is_stmt 0 view .LVU65
 237 0066 09A8     		add	r0, sp, #36
 238 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 239              	.LVL6:
 134:Core/Src/main.c ****   {
 240              		.loc 1 134 6 view .LVU66
 241 006c 88B9     		cbnz	r0, .L10
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 242              		.loc 1 141 3 is_stmt 1 view .LVU67
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 243              		.loc 1 141 31 is_stmt 0 view .LVU68
 244 006e 3F23     		movs	r3, #63
ARM GAS  /tmp/ccGJRFNG.s 			page 13


 245 0070 0193     		str	r3, [sp, #4]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 246              		.loc 1 144 3 is_stmt 1 view .LVU69
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 247              		.loc 1 144 34 is_stmt 0 view .LVU70
 248 0072 0023     		movs	r3, #0
 249 0074 0293     		str	r3, [sp, #8]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 250              		.loc 1 145 3 is_stmt 1 view .LVU71
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 251              		.loc 1 145 35 is_stmt 0 view .LVU72
 252 0076 0393     		str	r3, [sp, #12]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 253              		.loc 1 146 3 is_stmt 1 view .LVU73
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 254              		.loc 1 146 35 is_stmt 0 view .LVU74
 255 0078 0493     		str	r3, [sp, #16]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 256              		.loc 1 147 3 is_stmt 1 view .LVU75
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 257              		.loc 1 147 36 is_stmt 0 view .LVU76
 258 007a 0593     		str	r3, [sp, #20]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 259              		.loc 1 148 3 is_stmt 1 view .LVU77
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 260              		.loc 1 148 36 is_stmt 0 view .LVU78
 261 007c 0693     		str	r3, [sp, #24]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 262              		.loc 1 149 3 is_stmt 1 view .LVU79
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 263              		.loc 1 149 36 is_stmt 0 view .LVU80
 264 007e 0793     		str	r3, [sp, #28]
 150:Core/Src/main.c **** 
 265              		.loc 1 150 3 is_stmt 1 view .LVU81
 150:Core/Src/main.c **** 
 266              		.loc 1 150 36 is_stmt 0 view .LVU82
 267 0080 0893     		str	r3, [sp, #32]
 152:Core/Src/main.c ****   {
 268              		.loc 1 152 3 is_stmt 1 view .LVU83
 152:Core/Src/main.c ****   {
 269              		.loc 1 152 7 is_stmt 0 view .LVU84
 270 0082 0121     		movs	r1, #1
 271 0084 01A8     		add	r0, sp, #4
 272 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 273              	.LVL7:
 152:Core/Src/main.c ****   {
 274              		.loc 1 152 6 view .LVU85
 275 008a 20B9     		cbnz	r0, .L11
 156:Core/Src/main.c **** 
 276              		.loc 1 156 1 view .LVU86
 277 008c 1DB0     		add	sp, sp, #116
 278              	.LCFI5:
 279              		.cfi_remember_state
 280              		.cfi_def_cfa_offset 4
 281              		@ sp needed
 282 008e 5DF804FB 		ldr	pc, [sp], #4
 283              	.L10:
ARM GAS  /tmp/ccGJRFNG.s 			page 14


 284              	.LCFI6:
 285              		.cfi_restore_state
 136:Core/Src/main.c ****   }
 286              		.loc 1 136 5 is_stmt 1 view .LVU87
 287 0092 FFF7FEFF 		bl	Error_Handler
 288              	.LVL8:
 289              	.L11:
 154:Core/Src/main.c ****   }
 290              		.loc 1 154 5 view .LVU88
 291 0096 FFF7FEFF 		bl	Error_Handler
 292              	.LVL9:
 293              	.L13:
 294 009a 00BF     		.align	2
 295              	.L12:
 296 009c 00040058 		.word	1476396032
 297 00a0 00480258 		.word	1476544512
 298              		.cfi_endproc
 299              	.LFE145:
 301              		.section	.text.main,"ax",%progbits
 302              		.align	1
 303              		.global	main
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv5-d16
 309              	main:
 310              	.LFB144:
  66:Core/Src/main.c **** 
 311              		.loc 1 66 1 view -0
 312              		.cfi_startproc
 313              		@ Volatile: function does not return.
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI7:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 321              		.loc 1 73 3 view .LVU90
 322 0002 FFF7FEFF 		bl	MPU_Config
 323              	.LVL10:
  78:Core/Src/main.c **** 
 324              		.loc 1 78 3 view .LVU91
 325 0006 FFF7FEFF 		bl	HAL_Init
 326              	.LVL11:
  85:Core/Src/main.c **** 
 327              		.loc 1 85 3 view .LVU92
 328 000a FFF7FEFF 		bl	SystemClock_Config
 329              	.LVL12:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 330              		.loc 1 92 3 view .LVU93
 331 000e FFF7FEFF 		bl	MX_GPIO_Init
 332              	.LVL13:
 333              	.L15:
  99:Core/Src/main.c ****   {
 334              		.loc 1 99 3 discriminator 1 view .LVU94
ARM GAS  /tmp/ccGJRFNG.s 			page 15


 104:Core/Src/main.c ****   /* USER CODE END 3 */
 335              		.loc 1 104 3 discriminator 1 view .LVU95
  99:Core/Src/main.c ****   {
 336              		.loc 1 99 9 discriminator 1 view .LVU96
 337 0012 FEE7     		b	.L15
 338              		.cfi_endproc
 339              	.LFE144:
 341              		.section	.text.assert_failed,"ax",%progbits
 342              		.align	1
 343              		.global	assert_failed
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv5-d16
 349              	assert_failed:
 350              	.LVL14:
 351              	.LFB148:
 203:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 209:Core/Src/main.c ****   *         where the assert_param error has occurred.
 210:Core/Src/main.c ****   * @param  file: pointer to the source file name
 211:Core/Src/main.c ****   * @param  line: assert_param error line source number
 212:Core/Src/main.c ****   * @retval None
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 215:Core/Src/main.c **** {
 352              		.loc 1 215 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 216:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 217:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 218:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 219:Core/Src/main.c ****   /* USER CODE END 6 */
 220:Core/Src/main.c **** }
 357              		.loc 1 220 1 view .LVU98
 358 0000 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE148:
 362              		.text
 363              	.Letext0:
 364              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 365              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 366              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 367              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 368              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 369              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 370              		.file 9 "Core/Inc/gpio.h"
 371              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 372              		.file 11 "<built-in>"
ARM GAS  /tmp/ccGJRFNG.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccGJRFNG.s:17     .text.MPU_Config:0000000000000000 $t
     /tmp/ccGJRFNG.s:24     .text.MPU_Config:0000000000000000 MPU_Config
     /tmp/ccGJRFNG.s:103    .text.Error_Handler:0000000000000000 $t
     /tmp/ccGJRFNG.s:110    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccGJRFNG.s:142    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccGJRFNG.s:149    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccGJRFNG.s:296    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccGJRFNG.s:302    .text.main:0000000000000000 $t
     /tmp/ccGJRFNG.s:309    .text.main:0000000000000000 main
     /tmp/ccGJRFNG.s:342    .text.assert_failed:0000000000000000 $t
     /tmp/ccGJRFNG.s:349    .text.assert_failed:0000000000000000 assert_failed

UNDEFINED SYMBOLS
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
